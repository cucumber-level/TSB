local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local realCharacter = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = realCharacter:WaitForChild("HumanoidRootPart")
local camera = workspace.CurrentCamera

local fakeCharacter
local part

local function createTemporaryPart(position)
    local tempPart = Instance.new("Part")
    tempPart.Size = Vector3.new(200, 1, 200)
    tempPart.Anchored = true
    tempPart.CanCollide = true
    tempPart.Parent = workspace
    return tempPart
end

local function teleportAndReturn()
    fakeCharacter = realCharacter:Clone()
    fakeCharacter.Parent = workspace

    local targetPosition = humanoidRootPart.Position + (humanoidRootPart.CFrame.LookVector * 20000) + Vector3.new(0, -0.5, 0)
    part = createTemporaryPart(targetPosition)

    for _, v in pairs(fakeCharacter:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Transparency = 0.7
        end
    end

    humanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 0))

    camera.CameraSubject = fakeCharacter.Humanoid
    wait(6)
    humanoidRootPart.CFrame = fakeCharacter.HumanoidRootPart.CFrame

    camera.CameraSubject = realCharacter.Humanoid

    part:Destroy()
    fakeCharacter:Destroy()
end

teleportAndReturn()

OrionLib:MakeNotification({
	Name = "Anti Death Counter",
	Content = "Trying To Delete Death Counter",
	Image = "rbxassetid://7733658504",
	Time = 3
})
wait(7)
OrionLib:MakeNotification({
	Name = "Anti Death Counter",
	Content = "Success.",
	Image = "rbxassetid://7733658504",
	Time = 3
})
